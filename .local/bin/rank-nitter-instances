#!/usr/bin/python3

import os
import sys
from typing import NamedTuple

import requests

CACHE = '/tmp/nitter_instances'


def json_url():
    return 'https://raw.githubusercontent.com/xnaas/nitter-instances/master/history/summary.json'


class Instance(NamedTuple):
    url: str
    rank: tuple[float, ...]

    @classmethod
    def from_json(cls, json: dict[str, str]):
        rank = tuple(map(
            lambda val: float(val.replace('%', '')),
            (json["uptimeDay"], json["uptimeWeek"], json["uptimeMonth"], json["uptimeYear"],)
        ))
        return cls(url=json['url'], rank=rank, )


def sorted_instances(instances: list[Instance]) -> list[Instance]:
    return sorted(instances, key=lambda item: (*item.rank, -len(item.url)), reverse=True)


def main():
    if os.path.isfile(CACHE) and '--recalc' not in sys.argv[1:]:
        with open(CACHE) as f:
            return print(f.read())

    with requests.session() as s:
        instances: list[Instance] = [Instance.from_json(d) for d in s.get(json_url(), timeout=10).json()]

    with open(CACHE, 'w') as of:
        for instance in sorted_instances(instances):
            print(instance.url, *instance.rank, sep='\t', file=of)
            print(instance.url, *instance.rank, sep='\t')


if __name__ == '__main__':
    main()
